input {
  beats {
    port => 5044
  }
}

filter {

#  mutate {
#
#    add_field => { "nombreindex" => "%{source}" }
#    split => { "nombreindex" => "/" }
#    lowercase => [ "nombreindex" ]
#    add_field => ["archivo", "%{[nombreindex][-1]}" ]
#    gsub => [ "nombreindex", "/", "" ]
#    gsub => [
#      'message', '_', '',    #remove symbols
#      'message', '"', '',    #remove symbols
#      'message', '(', '',     #remove symbols
#      'message', ')', '',     #remove symbols
#      'message', ',', '',     #remove symbols
#      'message', ';', '',    #remove symbols
#      'message', '[]', ''    #remove symbols
#    ]
#  }

  grok {
    match => ["source","%{GREEDYDATA}/%{GREEDYDATA:nombreindex}\.csv"]
  }

# remove special characters removal for index name building
  mutate {
    gsub => [ "nombreindex", "-", ""]
    gsub => [ "nombreindex", "\_", ""]
    gsub => [ "nombreindex", "\.", ""]
    gsub => [ "nombreindex", " ", ""]
    lowercase => [ "nombreindex" ]
  }

  if [log_type] == "dns" {
    grok {
      match => { "message" => "%{WORD:pais}?,%{WORD:aplicacion}?,%{TIMESTAMP_ISO8601:event_date}?,%{WORD:host}?,%{HOSTNAME:clon}?,%{TIMESTAMP_ISO8601:fec_operacion}?,%{WORD:operation}?,%{IPV4:ip_server}?,%{IPV4:ip_client}?,%{POSINT:port_client}?,%{HOSTNAME:request}?,(?<requesttype>\b[0-9A-Za-z\.\-\:]{0,62}\b)?,%{GREEDYDATA:message}?"
      }
    }
    date {
      match => [ "fec_operacion", "yyyy-MM-dd' 'HH:mm:ss'.'SSSSSSSSS" ]
      target => "fec_operacion"
    }
  }

  if [log_type] == "proxy" {
    csv {
      separator => ","
      columns => ["country","aplicacion","event_date","host","clon","fec_operacion","ip_client","user","referer","cod_response","method","content_type","uri_host","port","uri_path","user_agent","bytes_response","bytes_request","message","pais","tipo","app","fecha"]
      skip_header => true
    }
    date {
      match => [ "fec_operacion", "yyyy-MM-dd' 'HH:mm:ss'.'SSSSSSSSS" ]
      target => "fec_operacion"
    }
  }

  else {
    mutate {
      gsub => [ 'message', '\"', '' ]
    }
    csv {
      separator => ","
      autodetect_column_names => true
      autogenerate_column_names => true        # use only if csv file has some no titled columns
      skip_header => false
    }
    date {
      match => [ "fec_operacion", "yyyy-MM-dd' 'HH:mm:ss'.'SSSSSSSSS" ]
      target => "fec_operacion"
    }
  }
}

output {
  elasticsearch {
      hosts => "elasticsearch1:9200"
      index => "csv-%{nombreindex}"
#      template => "./shards.json"
#      template_name => "shards"
#      template_overwrite => "false"
  }
}
